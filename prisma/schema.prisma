// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String         @id @unique @default(uuid())
  name       String         @db.VarChar(100)
  email      String         @unique
  password   String         @db.VarChar(255)
  role       RoleUser       @relation(fields: [role_id], references: [id])
  role_id    String
  is_deleted Int
  createdAt  DateTime       @default(now()) @map(name: "created_at")
  updatedAt  DateTime       @updatedAt @map(name: "updated_at")
  DataUrl    DataUrl[]
  tokens     Token[]
  domain     Domain[]
  activities UserActivity[]

  @@map(name: "users")
}

model RoleUser {
  id   String  @id @default(uuid())
  user User[]
  name String? @unique @db.VarChar(100)

  @@map(name: "role_user")
}

model DataUrl {
  id           String   @id @unique @default(uuid())
  title        String   @db.VarChar(2555)
  destination  String
  path         String   @unique @db.VarChar(2555)
  count_clicks Int
  is_deleted   Int
  user         User     @relation(fields: [user_id], references: [id])
  user_id      String
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "tbl_data_url")
}

model Token {
  id            String   @id @unique @default(uuid())
  refresh_token String   @unique
  is_revoked    Boolean  @default(false)
  expires_at    DateTime
  user          User     @relation(fields: [user_id], references: [id])
  user_id       String
  device_info   String?
  ip_address    String?
  createdAt     DateTime @default(now()) @map(name: "created_at")
  updatedAt     DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "tokens")
}

model Domain {
  id         String   @id @unique @default(uuid())
  domain     String   @unique
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])
  is_default Int
  is_deleted Int
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "domains")
}

model UserActivity {
  id            String   @id @unique @default(uuid())
  user_id       String
  user          User     @relation(fields: [user_id], references: [id])
  activity_type String   @db.VarChar(100)
  description   String?  @db.Text
  ip_address    String?  @db.VarChar(100)
  user_agent    String?  @db.Text
  resource_id   String?  @db.VarChar(100)
  resource_type String?  @db.VarChar(100)
  createdAt     DateTime @default(now()) @map(name: "created_at")

  @@map(name: "user_activities")
}
